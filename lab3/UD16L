module countUD16(
    input up_i,
    input ld_i,
    input dw_i,
    input clk_i,
    input [15:0] Din_i,
    output [15:0] Q_o,
    output utc_o,
    output dtc_o
    );

    wire [3:0] Q0;
    wire [3:0] Q1;
    wire [3:0] Q2;
    wire [3:0] Q3;

    wire utc0;
    wire utc1;
    wire utc2;
    wire utc3;
    wire dtc0;
    wire dtc1;
    wire dtc2;
    wire dtc3;

    countUD4L one(
        .clk_i(clk_i),
        .up_i(up_i),
        .dw_i(dw_i),
        .ld_i(ld_i),
        .Din_i(Din_i[3:0]),
        .Q_o(Q0),
        .utc_o(utc0),
        .dtc_o(dtc0)
    );

    countUD4L two(
        .clk_i(clk_i),
        .up_i(up_i & utc0),
        .dw_i(dw_i & dtc0),
        .ld_i(ld_i),
        .Din_i(Din_i[7:4]),
        
        .Q_o(Q1),
        .utc_o(utc1),
        .dtc_o(dtc1)
    );

    countUD4L three(
        .clk_i(clk_i),
        .up_i(up_i & utc0 & utc1),
        .dw_i(dw_i & dtc0 & dtc1),
        .ld_i(ld_i),
        .Din_i(Din_i[11:8]),
        
        .Q_o(Q2),
        .utc_o(utc2),
        .dtc_o(dtc2)
    );

    countUD4L four(
        .clk_i(clk_i),
        .up_i(up_i & utc0 & utc1 & utc2),
        .dw_i(dw_i & dtc0 & dtc1 & dtc2),
        .ld_i(ld_i),
        .Din_i(Din_i[15:12]),
        
        .Q_o(Q3),
        .utc_o(utc3),
        .dtc_o(dtc3)
    );

    assign Q_o = {Q3, Q2, Q1, Q0};
    
    assign utc_o =  (utc0 & 
                    utc1 & 
                    utc2 & 
                    utc3);
    assign dtc_o =  (dtc0 & 
                    dtc1 & 
                    dtc2 & 
                    dtc3);

endmodule
